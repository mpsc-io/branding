"use strict";(self.webpackChunkuser_guide=self.webpackChunkuser_guide||[]).push([[414],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,m=p["".concat(s,".").concat(h)]||p[h]||u[h]||a;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},26512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const a={sidebar_position:1,id:"design",slug:"/design"},o="CoreMX Cloud Connectivity Pattern",l={unversionedId:"design",id:"design",title:"CoreMX Cloud Connectivity Pattern",description:"CoreMX is designed to be cloud-agnostic and independently deployable in any cloud kubernetes offering.",source:"@site/docs/design.md",sourceDirName:".",slug:"/design",permalink:"/docs/design",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"design",slug:"/design"},sidebar:"tutorialSidebar",next:{title:"Global Call Events",permalink:"/docs/glayr"}},s={},c=[{value:"Components",id:"components",level:2},{value:"Registry Node",id:"registry-node",level:3},{value:"Registry Node - Persistence",id:"registry-node---persistence",level:2},{value:"Auth Service",id:"auth-service",level:2},{value:"CoreMX",id:"coremx",level:2},{value:"CASH Service",id:"cash-service",level:3},{value:"Create",id:"create",level:3},{value:"Join",id:"join",level:3},{value:"Global State",id:"global-state",level:2},{value:"GCAS - Global CoreMX Advertisement State",id:"gcas---global-coremx-advertisement-state",level:2},{value:"Features of GCAS Exchange",id:"features-of-gcas-exchange",level:3},{value:"CCES - Central CoreMX Event Store",id:"cces---central-coremx-event-store",level:2},{value:"Overall Flow",id:"overall-flow",level:2},{value:"Fault-Tolerance &amp; Idempotency",id:"fault-tolerance--idempotency",level:2},{value:"SIP Accounts for the user",id:"sip-accounts-for-the-user",level:2}],d={toc:c};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"coremx-cloud-connectivity-pattern"},"CoreMX Cloud Connectivity Pattern"),(0,i.kt)("p",null,"CoreMX is designed to be cloud-agnostic and independently deployable in any cloud kubernetes offering.\nThis means that the microservices that orchestrate the system of multiple CoreMX instances are described as cloud-native k8s manifests and can be tested in Minikube as well as Enterprise Offering of Cloud. "),(0,i.kt)("h2",{id:"components"},"Components"),(0,i.kt)("h3",{id:"registry-node"},"Registry Node"),(0,i.kt)("p",null,"A registry node is a globally well-known node, with each one operating as a priority based failover of each other. These nodes are designed to run as long-running (server-like) instances (using the Deployment type of k8s ) with multiple idempotent instances serving each registry node.\nEach cloud-deployment will have 1-2 registry nodes with well known URLs. In an ideal system we would have several registry nodes with following URLs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'var RegistryURLs = []string {\n"reg-c1-1.hoot.mx",\n"reg-c1-2-hoot.mx",\n"reg-c2-1-hoot.mx",\n...\n}\n')),(0,i.kt)("p",null,"The format depicts: ",(0,i.kt)("inlineCode",{parentName:"p"},"reg-[cloud-identifier]-[priority].hoot.mx")),(0,i.kt)("p",null,"Components in each cloud will try reaching their local registry node before falling back on the list of global well known ones with priority. "),(0,i.kt)("h2",{id:"registry-node---persistence"},"Registry Node - Persistence"),(0,i.kt)("p",null,"The persistence layer for the idempotent instances of the registry node is a document based database which is another cloud-agnostic deployment. IOW, the persistence layer isnt deployed in the same cloud, we're using Atlas Mongo as the cloud-agnostic persistence layer."),(0,i.kt)("h2",{id:"auth-service"},"Auth Service"),(0,i.kt)("p",null,"Auth Service is another highly scalable idempotent service which analyses the inbound authentication token and infers information payload for future decisions. It also stamps the payload with other metadata in relation to the user's account.\nWithin a cluster, the auth-service can be reached by following URL."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"https://auth-service.hoox.svc")),(0,i.kt)("p",null,"This is not exposed externally and only accessible from within the k8s cluster. "),(0,i.kt)("h2",{id:"coremx"},"CoreMX"),(0,i.kt)("p",null,"CoreMX is an independent instance within a kubernetes pod or virtual-machine, which can do all the aspects of conference-managment and control.\nCoreMX can be broken down into logical components which are tightly coupled with each other."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Media Mixer"),(0,i.kt)("li",{parentName:"ul"},"WebRTC engine"),(0,i.kt)("li",{parentName:"ul"},"Kurento Media Server"),(0,i.kt)("li",{parentName:"ul"},"CoreMX API Service Helper (CASH)")),(0,i.kt)("h3",{id:"cash-service"},"CASH Service"),(0,i.kt)("p",null,"The CASH is responsible for initialising the entire system and reporting the health and availability to the local registry nodes."),(0,i.kt)("p",null,"All the functionality for a CoreMX is requested via the API provided by CASH. CASH will do its independent auth verification for each request and may perform reasonable caching."),(0,i.kt)("p",null,"CASH will be able to control the participants in any conference run by its corresponding CoreMX."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(12737).Z,width:"1052",height:"811"})),(0,i.kt)("h1",{id:"user-experience"},"User-Experience"),(0,i.kt)("p",null,"A user either creates a conference or joins a conference.\nTo perform any actions, the user needs to authenticate with the system and obtain a short-lived (8 hours) token.\nAll the actions in that session of 8 hours will be performed using that token."),(0,i.kt)("h3",{id:"create"},"Create"),(0,i.kt)("p",null,'The user creates a new conference with a unique "conference_id" and allows certain identities (users) to join the conference.\nThis conference will also have a unique address which is propagated to all registries:'),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"hoot.mx://conference_id@mixeraddress.hoot.mx")),(0,i.kt)("h3",{id:"join"},"Join"),(0,i.kt)("p",null,"The user connects with the nearest registry and asks to join.\n",(0,i.kt)("inlineCode",{parentName:"p"},"hoot.mx://conference_id@mixeraddress.hoot.mx")),(0,i.kt)("p",null,"The registry checks the entitlement against the conference for that user and then allows or rejects the user to join. The user will be given a unique web-URL to join the conference."),(0,i.kt)("h1",{id:"connectivity-pattern"},"Connectivity Pattern"),(0,i.kt)("h2",{id:"global-state"},"Global State"),(0,i.kt)("p",null,"Global Conference State is managed and propagated using 2 independent systems."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Global CoreMX Advertisement State ( GCAS )"),(0,i.kt)("li",{parentName:"ul"},"Central CoreMX Event Store ( CCES )")),(0,i.kt)("h2",{id:"gcas---global-coremx-advertisement-state"},"GCAS - Global CoreMX Advertisement State"),(0,i.kt)("p",null,"This is a map each registry nodes stores within itself. The map is a key:value pair, with"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"key : the globally well-known registry node"),(0,i.kt)("li",{parentName:"ul"},"value : list of CoreMX within its cloud.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GCAS: map[registry.node]: [list[CoreMX]]")),(0,i.kt)("p",null,"GCAS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{\n'self': {registry_meta, list[CoreMX]},\n'reg-c1-2-hoot.mx': {registry_meta, list[CoreMX]},\n...\n}\n")),(0,i.kt)("p",null,"2 or more registry nodes in the same cloud will have an identical map.\nThe GCAS exchange with registry nodes is triggered upon a timeout or activity in local cloud (whichever happens earlier) periodically."),(0,i.kt)("h3",{id:"features-of-gcas-exchange"},"Features of GCAS Exchange"),(0,i.kt)("p",null,"Triggered upon a regular last_update timeout or local core-mx event. Each update, triggers a reconciliation.\nThe truth is decided by recency of information and number of nodes informing the same information."),(0,i.kt)("p",null,"This is an ",(0,i.kt)("strong",{parentName:"p"},"eventually consistent")," system."),(0,i.kt)("h2",{id:"cces---central-coremx-event-store"},"CCES - Central CoreMX Event Store"),(0,i.kt)("p",null,"The CCES is a highly available Kafka event store with each CoreMX as its own topic. One can subscribe to the topic for all the events on the CoreMX conference and relay its interface with updates.\nCoreMX Connectivity"),(0,i.kt)("p",null,"CoreMX's main interface to the world is ",(0,i.kt)("inlineCode",{parentName:"p"},"CASH"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"CASH")," is the first service to be initialised when CoreMX is commissioned."),(0,i.kt)("p",null,"CASH links up to cloud local registry service and updates about its health and state. CASH informs all about the resource usage and availability patterns of the CoreMX. IOW - CASH is responsible for preventing the CoreMX from getting overwhelmed."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(56530).Z,width:"668",height:"1031"})),(0,i.kt)("h2",{id:"overall-flow"},"Overall Flow"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Registry Identification - identify the registry based on a pre-defined list or use a iroulette service (intelligent-roulette) to identify the best resgistry for you based on your location and other factors."),(0,i.kt)("li",{parentName:"ol"},"Call Orchestration - Initiate call-orchestration APIs ( create , join etc). . Call Control - Based on the CoreMX's direct URL, initiate call control APIs.")),(0,i.kt)("h1",{id:"call-creation-workflow"},"Call Creation Workflow"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(90975).Z,width:"591",height:"1571"})),(0,i.kt)("h2",{id:"fault-tolerance--idempotency"},"Fault-Tolerance & Idempotency"),(0,i.kt)("p",null,"CoreMX workflows are deigned to be fault-tolerant & idempotent.\nThis means that following operations will result in same outcome, even when the underlying CoreMX has been replaced"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Conference Creation"),(0,i.kt)("li",{parentName:"ul"},"Conference Join"),(0,i.kt)("li",{parentName:"ul"},"Conference Edits")),(0,i.kt)("p",null,"Fault-tolerance in implemented by making CoreMX a variable input in the call function.\nThe Conference Object (CoreMX) is build if several components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Participants ","[1...n]"),(0,i.kt)("li",{parentName:"ul"},"CoreMX"),(0,i.kt)("li",{parentName:"ul"},"Features"),(0,i.kt)("li",{parentName:"ul"},"Settings"),(0,i.kt)("li",{parentName:"ul"},"Credentials"),(0,i.kt)("li",{parentName:"ul"},"Branding Artifacts")),(0,i.kt)("p",null,"When a ",(0,i.kt)("inlineCode",{parentName:"p"},"join")," request is received, the system does sanity checks to make sure the conference is ready to join.\nAt that time, if the CoreMX if join link is not same core-mx of Conference, the system will:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"re-authenticate against the CoreMX of Conference"),(0,i.kt)("li",{parentName:"ul"},"generate signed links for joining"),(0,i.kt)("li",{parentName:"ul"},"update join-link in the ",(0,i.kt)("inlineCode",{parentName:"li"},"307")," response and persist the signed link.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Fault Tolerance",src:n(17214).Z,width:"809",height:"521"})),(0,i.kt)("h2",{id:"sip-accounts-for-the-user"},"SIP Accounts for the user"),(0,i.kt)("p",null,"The CoreMX core distributor algorithm will ensure that every unique user will have a unique numeric SIP ",(0,i.kt)("inlineCode",{parentName:"p"},"UserID")," across all CoreMXes.\nThis means that, the user will never have to change their SIP user ID. The ",(0,i.kt)("inlineCode",{parentName:"p"},"domain")," may change if the call has been relocated to a different CoreMX."),(0,i.kt)("p",null,"The SIP ",(0,i.kt)("inlineCode",{parentName:"p"},"secret")," will change by the call. However for a particular conference participant, the secret will also be same across different CoreMXs."))}u.isMDXComponent=!0},90975:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/callwf-dc541ed38b7d3112deeb9afd37137253.png"},56530:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/coremx-ee9efe31c2d2d02c0e7bcf3539c5bbee.png"},17214:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/fault-tolerance-b54a713dd88188e21ef2bc5000cf6502.png"},12737:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/hoot-fa985f763adb8e7f8593688734752ceb.png"}}]);